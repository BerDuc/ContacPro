// <auto-generated />
using System;
using ContacPro_Serveur.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContacPro_Serveur.Migrations
{
    [DbContext(typeof(ContacProDBContext))]
    partial class ContacProDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContacPro_Serveur.Models.Entente", b =>
                {
                    b.Property<int>("EntenteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_entente")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ApprouveClient")
                        .HasColumnName("Approuve_client")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprouvePro")
                        .HasColumnName("Approuve_pro")
                        .HasColumnType("bit");

                    b.Property<int>("Client_ID")
                        .HasColumnType("int");

                    b.Property<int>("Pro_ID")
                        .HasColumnType("int");

                    b.HasKey("EntenteID")
                        .HasName("PK__Entente__1CC5D80D0E446E07");

                    b.HasIndex("Client_ID");

                    b.HasIndex("Pro_ID");

                    b.ToTable("Ententes");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Expertise", b =>
                {
                    b.Property<int>("ExpertiseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_expertise")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasColumnName("valeur")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ExpertiseID")
                        .HasName("PK__Expertis__9F8DB893847A1F2A");

                    b.ToTable("Expertises");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MessageID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Auteur_Id")
                        .HasColumnType("int");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Destinataire_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Entente_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Lu")
                        .HasColumnType("bit");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("MessageID")
                        .HasName("PK__Messages__0A1524C05E7B23AE");

                    b.HasIndex("Auteur_Id");

                    b.HasIndex("Destinataire_Id");

                    b.HasIndex("Entente_ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Prestation", b =>
                {
                    b.Property<int>("PrestationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrestationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Client_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Lieu")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Pro_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Retribution")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PrestationID")
                        .HasName("PK__Prestati__52B08CDD15B0DEDA");

                    b.HasIndex("Client_Id");

                    b.HasIndex("Pro_Id");

                    b.ToTable("Prestations");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.ProExp", b =>
                {
                    b.Property<int>("ExpertiseID")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurID")
                        .HasColumnType("int");

                    b.HasKey("ExpertiseID", "UtilisateurID");

                    b.HasIndex("UtilisateurID");

                    b.ToTable("ProExps");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_tag")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasColumnName("valeur")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("TagID")
                        .HasName("PK__Tags__2D1436F3C199AA3D");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Tag_Prestation", b =>
                {
                    b.Property<int>("PrestationID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.HasKey("PrestationID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("Tags_Prestations");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddrPhoto")
                        .HasColumnName("addr_photo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnName("courriel")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnName("mdp")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnName("prenom")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UtilisateurID");

                    b.HasIndex("Courriel")
                        .IsUnique()
                        .HasName("UQ__Utilisat__049FB202EAE654B1");

                    b.ToTable("Utilisateurs");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Utilisateur");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Client", b =>
                {
                    b.HasBaseType("ContacPro_Serveur.Models.Utilisateur");

                    b.Property<string>("Institution")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Professionnel", b =>
                {
                    b.HasBaseType("ContacPro_Serveur.Models.Utilisateur");

                    b.Property<string>("AddrCv")
                        .HasColumnName("addr_cv")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasDiscriminator().HasValue("Professionnel");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Entente", b =>
                {
                    b.HasOne("ContacPro_Serveur.Models.Client", "Client")
                        .WithMany("Ententes")
                        .HasForeignKey("Client_ID")
                        .HasConstraintName("fk_entente_client")
                        .IsRequired();

                    b.HasOne("ContacPro_Serveur.Models.Professionnel", "Pro")
                        .WithMany("Ententes")
                        .HasForeignKey("Pro_ID")
                        .HasConstraintName("fk_entente_pro")
                        .IsRequired();
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Message", b =>
                {
                    b.HasOne("ContacPro_Serveur.Models.Utilisateur", "Auteur")
                        .WithMany("Messages_Envoyes")
                        .HasForeignKey("Auteur_Id")
                        .IsRequired();

                    b.HasOne("ContacPro_Serveur.Models.Utilisateur", "Destinataire")
                        .WithMany("Messages_Recus")
                        .HasForeignKey("Destinataire_Id")
                        .IsRequired();

                    b.HasOne("ContacPro_Serveur.Models.Entente", "Entente_Associee")
                        .WithMany("Messages")
                        .HasForeignKey("Entente_ID")
                        .HasConstraintName("fk_message_entente");
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Prestation", b =>
                {
                    b.HasOne("ContacPro_Serveur.Models.Client", "Beneficiaire")
                        .WithMany("Prestations")
                        .HasForeignKey("Client_Id")
                        .HasConstraintName("fk_prest_id_client")
                        .IsRequired();

                    b.HasOne("ContacPro_Serveur.Models.Professionnel", "Prestataire")
                        .WithMany("Prestations")
                        .HasForeignKey("Pro_Id")
                        .HasConstraintName("fk_prest_id_pro")
                        .IsRequired();
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.ProExp", b =>
                {
                    b.HasOne("ContacPro_Serveur.Models.Expertise", "Expertise")
                        .WithMany("Professionnels")
                        .HasForeignKey("ExpertiseID")
                        .HasConstraintName("fk_pro_exp_Id_exp")
                        .IsRequired();

                    b.HasOne("ContacPro_Serveur.Models.Professionnel", "Professionnel")
                        .WithMany("Expertises")
                        .HasForeignKey("UtilisateurID")
                        .HasConstraintName("fk_pro_exp_Id_pro")
                        .IsRequired();
                });

            modelBuilder.Entity("ContacPro_Serveur.Models.Tag_Prestation", b =>
                {
                    b.HasOne("ContacPro_Serveur.Models.Prestation", "Prestation")
                        .WithMany("Tags")
                        .HasForeignKey("PrestationID")
                        .HasConstraintName("fk_tags_prest")
                        .IsRequired();

                    b.HasOne("ContacPro_Serveur.Models.Tag", "Tag")
                        .WithMany("Prestations")
                        .HasForeignKey("TagID")
                        .HasConstraintName("fk_tags")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
